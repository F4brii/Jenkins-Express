apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-deployment
spec:
  selector:
    matchLabels:
      app: pgadmin
  replicas: 1
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "fabricio@gmail.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "123456789"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
spec:
  selector:
    app: pgadmin
  type: NodePort
  ports:
    - port: 80
      nodePort: 30202
      protocol: TCP
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1 #Deployment
kind: Deployment
metadata:
  name: deploy-postgres
  labels:
    app: postgres
spec:
  replicas: 1 #replicaSets
  selector:
    matchLabels:
      app: postgres
  template: #Pod
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Assemblix86*
            - name: POSTGRES_DB
              value: express
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  backend-deploy-1
  labels:
    app:  backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app:  backend
    spec:
      containers:
      - image:  f4brii28/express:0.0.2
        name:  backend      
        command: ["npm", "run", "dev"]
        ports:
        - containerPort:  3000
          name:  express
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend
spec:
  type: NodePort
  ports:
    - port: 3000
  selector:
    app: backend